
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ENQUANTO ESCREVER ID INT INTDECL LER LINTDECL SE STRINGprograma : ZonaDeclaracao ZonaInstrucoesZonaDeclaracao : ZonaDeclaracao : DeclaracoesDeclaracoes : DeclaracaoDeclaracoes : Declaracoes DeclaracaoDeclaracao : INTDECL ID ';' Declaracao : LINTDECL ID Array ';' Array : '[' INT ']'Array : Array '[' INT ']'ZonaInstrucoes : ZonaInstrucoes : InstrucoesInstrucoes : InstrucaoInstrucoes : Instrucoes InstrucaoInstrucao : ID '<' '-' expressao ';' Instrucao : ID ListArrayExp '<' '-' expressao ';' Instrucao : SE '(' condicao ')' '{' if '}' Instrucao : SE '(' condicao ')' '{' if '}' '{' else '}' if : ZonaInstrucoeselse : ZonaInstrucoesInstrucao : ENQUANTO '(' condicao ')' '{' ciclo '}' ciclo : ZonaInstrucoesInstrucao : LER '(' ID ')' ';' Instrucao : LER '(' ID ListArrayExp ')' ';' Instrucao : ESCREVER '(' expressao ')' ';' Instrucao : ESCREVER '(' STRING ')' ';' Instrucao : ESCREVER '(' STRING ',' expressao ')' ';' condicao : expressao '<' expressaocondicao : expressao '>' expressaocondicao : expressao '<' '=' expressaocondicao : expressao '>' '=' expressaocondicao : expressao '=' expressaocondicao : expressao '!' '=' expressaoexpressao : expressao '+' termoexpressao : expressao '-' termoexpressao : termotermo : termo '*' fatortermo : termo '%' fatortermo : termo '/' fatortermo : fatorfator : INTfator : IDfator : ID ListArrayExp fator : '(' expressao ')'ListArrayExp : '[' expressao ']' ListArrayExp : ListArrayExp '[' expressao ']' "
    
_lr_action_items = {'ID':([0,2,3,4,5,6,8,9,15,18,21,22,23,24,25,26,29,31,37,44,48,51,52,53,54,55,59,60,61,68,71,80,82,84,86,87,88,90,91,94,102,104,105,106,107,110,],[-2,10,-3,-4,16,17,10,-12,-5,-13,36,36,36,41,36,-6,36,36,36,-7,36,36,36,36,36,36,36,36,36,36,-14,10,36,36,36,10,-22,-24,-25,-15,-23,-16,-20,-26,10,-17,]),'SE':([0,2,3,4,8,9,15,18,26,44,71,80,87,88,90,91,94,102,104,105,106,107,110,],[-2,11,-3,-4,11,-12,-5,-13,-6,-7,-14,11,11,-22,-24,-25,-15,-23,-16,-20,-26,11,-17,]),'ENQUANTO':([0,2,3,4,8,9,15,18,26,44,71,80,87,88,90,91,94,102,104,105,106,107,110,],[-2,12,-3,-4,12,-12,-5,-13,-6,-7,-14,12,12,-22,-24,-25,-15,-23,-16,-20,-26,12,-17,]),'LER':([0,2,3,4,8,9,15,18,26,44,71,80,87,88,90,91,94,102,104,105,106,107,110,],[-2,13,-3,-4,13,-12,-5,-13,-6,-7,-14,13,13,-22,-24,-25,-15,-23,-16,-20,-26,13,-17,]),'ESCREVER':([0,2,3,4,8,9,15,18,26,44,71,80,87,88,90,91,94,102,104,105,106,107,110,],[-2,14,-3,-4,14,-12,-5,-13,-6,-7,-14,14,14,-22,-24,-25,-15,-23,-16,-20,-26,14,-17,]),'$end':([0,1,2,3,4,7,8,9,15,18,26,44,71,88,90,91,94,102,104,105,106,110,],[-2,0,-10,-3,-4,-1,-11,-12,-5,-13,-6,-7,-14,-22,-24,-25,-15,-23,-16,-20,-26,-17,]),'INTDECL':([0,3,4,15,26,44,],[5,5,-4,-5,-6,-7,]),'LINTDECL':([0,3,4,15,26,44,],[6,6,-4,-5,-6,-7,]),'}':([8,9,18,71,80,87,88,90,91,94,95,96,100,101,102,104,105,106,107,108,109,110,],[-11,-12,-13,-14,-10,-10,-22,-24,-25,-15,104,-18,105,-21,-23,-16,-20,-26,-10,110,-19,-17,]),'<':([10,20,33,34,35,36,39,50,56,73,74,75,76,77,78,79,],[19,30,-35,-39,-40,-41,59,-44,-42,-45,-33,-34,-36,-37,-38,-43,]),'[':([10,17,20,27,36,41,50,56,65,70,73,93,],[21,28,31,45,21,21,-44,31,31,-8,-45,-9,]),'(':([11,12,13,14,21,22,23,25,29,31,37,48,51,52,53,54,55,59,60,61,68,82,84,86,],[22,23,24,25,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),';':([16,27,33,34,35,36,47,50,56,64,66,67,70,72,73,74,75,76,77,78,79,89,93,103,],[26,44,-35,-39,-40,-41,71,-44,-42,88,90,91,-8,94,-45,-33,-34,-36,-37,-38,-43,102,-9,106,]),'-':([19,30,32,33,34,35,36,39,42,47,49,50,56,57,72,73,74,75,76,77,78,79,81,83,85,92,97,98,99,],[29,48,52,-35,-39,-40,-41,52,52,52,52,-44,-42,52,52,-45,-33,-34,-36,-37,-38,-43,52,52,52,52,52,52,52,]),'INT':([21,22,23,25,28,29,31,37,45,48,51,52,53,54,55,59,60,61,68,82,84,86,],[35,35,35,35,46,35,35,35,69,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'STRING':([25,],[43,]),']':([32,33,34,35,36,46,49,50,56,69,73,74,75,76,77,78,79,],[50,-35,-39,-40,-41,70,73,-44,-42,93,-45,-33,-34,-36,-37,-38,-43,]),'+':([32,33,34,35,36,39,42,47,49,50,56,57,72,73,74,75,76,77,78,79,81,83,85,92,97,98,99,],[51,-35,-39,-40,-41,51,51,51,51,-44,-42,51,51,-45,-33,-34,-36,-37,-38,-43,51,51,51,51,51,51,51,]),'>':([33,34,35,36,39,50,56,73,74,75,76,77,78,79,],[-35,-39,-40,-41,60,-44,-42,-45,-33,-34,-36,-37,-38,-43,]),'=':([33,34,35,36,39,50,56,59,60,62,73,74,75,76,77,78,79,],[-35,-39,-40,-41,61,-44,-42,82,84,86,-45,-33,-34,-36,-37,-38,-43,]),'!':([33,34,35,36,39,50,56,73,74,75,76,77,78,79,],[-35,-39,-40,-41,62,-44,-42,-45,-33,-34,-36,-37,-38,-43,]),')':([33,34,35,36,38,40,41,42,43,50,56,57,65,73,74,75,76,77,78,79,81,83,85,92,97,98,99,],[-35,-39,-40,-41,58,63,64,66,67,-44,-42,79,89,-45,-33,-34,-36,-37,-38,-43,-27,-28,-31,103,-29,-30,-32,]),'*':([33,34,35,36,50,56,73,74,75,76,77,78,79,],[53,-39,-40,-41,-44,-42,-45,53,53,-36,-37,-38,-43,]),'%':([33,34,35,36,50,56,73,74,75,76,77,78,79,],[54,-39,-40,-41,-44,-42,-45,54,54,-36,-37,-38,-43,]),'/':([33,34,35,36,50,56,73,74,75,76,77,78,79,],[55,-39,-40,-41,-44,-42,-45,55,55,-36,-37,-38,-43,]),',':([43,],[68,]),'{':([58,63,104,],[80,87,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'ZonaDeclaracao':([0,],[2,]),'Declaracoes':([0,],[3,]),'Declaracao':([0,3,],[4,15,]),'ZonaInstrucoes':([2,80,87,107,],[7,96,101,109,]),'Instrucoes':([2,80,87,107,],[8,8,8,8,]),'Instrucao':([2,8,80,87,107,],[9,18,9,9,9,]),'ListArrayExp':([10,36,41,],[20,56,65,]),'Array':([17,],[27,]),'expressao':([21,22,23,25,29,31,37,48,59,60,61,68,82,84,86,],[32,39,39,42,47,49,57,72,81,83,85,92,97,98,99,]),'termo':([21,22,23,25,29,31,37,48,51,52,59,60,61,68,82,84,86,],[33,33,33,33,33,33,33,33,74,75,33,33,33,33,33,33,33,]),'fator':([21,22,23,25,29,31,37,48,51,52,53,54,55,59,60,61,68,82,84,86,],[34,34,34,34,34,34,34,34,34,34,76,77,78,34,34,34,34,34,34,34,]),'condicao':([22,23,],[38,40,]),'if':([80,],[95,]),'ciclo':([87,],[100,]),'else':([107,],[108,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> ZonaDeclaracao ZonaInstrucoes','programa',2,'p_programa','compilador2.py',7),
  ('ZonaDeclaracao -> <empty>','ZonaDeclaracao',0,'p_declaracao_vazia','compilador2.py',13),
  ('ZonaDeclaracao -> Declaracoes','ZonaDeclaracao',1,'p_declaracao_notvazia','compilador2.py',17),
  ('Declaracoes -> Declaracao','Declaracoes',1,'p_declaracoes_paragem','compilador2.py',21),
  ('Declaracoes -> Declaracoes Declaracao','Declaracoes',2,'p_declaracoes_rec','compilador2.py',25),
  ('Declaracao -> INTDECL ID ;','Declaracao',3,'p_declaracaoID','compilador2.py',31),
  ('Declaracao -> LINTDECL ID Array ;','Declaracao',4,'p_declaracaoList','compilador2.py',39),
  ('Array -> [ INT ]','Array',3,'p_arraySingle','compilador2.py',48),
  ('Array -> Array [ INT ]','Array',4,'p_arrayNotSingle','compilador2.py',52),
  ('ZonaInstrucoes -> <empty>','ZonaInstrucoes',0,'p_zonaInstrucoesVazia','compilador2.py',57),
  ('ZonaInstrucoes -> Instrucoes','ZonaInstrucoes',1,'p_zonaInstrucoesNotVazia','compilador2.py',61),
  ('Instrucoes -> Instrucao','Instrucoes',1,'p_InstrucoesParagem','compilador2.py',66),
  ('Instrucoes -> Instrucoes Instrucao','Instrucoes',2,'p_Instrucoes','compilador2.py',70),
  ('Instrucao -> ID < - expressao ;','Instrucao',5,'p_AtribuicaoInt','compilador2.py',76),
  ('Instrucao -> ID ListArrayExp < - expressao ;','Instrucao',6,'p_AtribuicaoListEXP','compilador2.py',88),
  ('Instrucao -> SE ( condicao ) { if }','Instrucao',7,'p_InstrucaoIF','compilador2.py',125),
  ('Instrucao -> SE ( condicao ) { if } { else }','Instrucao',10,'p_InstrucaoIFElse','compilador2.py',131),
  ('if -> ZonaInstrucoes','if',1,'p_if','compilador2.py',137),
  ('else -> ZonaInstrucoes','else',1,'p_else','compilador2.py',141),
  ('Instrucao -> ENQUANTO ( condicao ) { ciclo }','Instrucao',7,'p_InstrucaoENQUANTO','compilador2.py',147),
  ('ciclo -> ZonaInstrucoes','ciclo',1,'p_ciclo','compilador2.py',153),
  ('Instrucao -> LER ( ID ) ;','Instrucao',5,'p_InstrucaoLER','compilador2.py',159),
  ('Instrucao -> LER ( ID ListArrayExp ) ;','Instrucao',6,'p_InstrucaoLERarray','compilador2.py',173),
  ('Instrucao -> ESCREVER ( expressao ) ;','Instrucao',5,'p_InstrucaoESCREVERExp','compilador2.py',211),
  ('Instrucao -> ESCREVER ( STRING ) ;','Instrucao',5,'p_InstrucaoESCREVERS','compilador2.py',215),
  ('Instrucao -> ESCREVER ( STRING , expressao ) ;','Instrucao',7,'p_InstrucaoESCREVERSV','compilador2.py',219),
  ('condicao -> expressao < expressao','condicao',3,'p_condicao_menor','compilador2.py',224),
  ('condicao -> expressao > expressao','condicao',3,'p_condicao_maior','compilador2.py',228),
  ('condicao -> expressao < = expressao','condicao',4,'p_condicao_menorI','compilador2.py',232),
  ('condicao -> expressao > = expressao','condicao',4,'p_condicao_maiorI','compilador2.py',236),
  ('condicao -> expressao = expressao','condicao',3,'p_condicao_igual','compilador2.py',240),
  ('condicao -> expressao ! = expressao','condicao',4,'p_condicao_diff','compilador2.py',244),
  ('expressao -> expressao + termo','expressao',3,'p_expressao_plus','compilador2.py',250),
  ('expressao -> expressao - termo','expressao',3,'p_expressao_menos','compilador2.py',254),
  ('expressao -> termo','expressao',1,'p_expressao','compilador2.py',258),
  ('termo -> termo * fator','termo',3,'p_termo_vezes','compilador2.py',262),
  ('termo -> termo % fator','termo',3,'p_termo_resto','compilador2.py',266),
  ('termo -> termo / fator','termo',3,'p_termo_div','compilador2.py',270),
  ('termo -> fator','termo',1,'p_termo','compilador2.py',274),
  ('fator -> INT','fator',1,'p_fator1','compilador2.py',278),
  ('fator -> ID','fator',1,'p_fator2','compilador2.py',282),
  ('fator -> ID ListArrayExp','fator',2,'p_fatorL','compilador2.py',297),
  ('fator -> ( expressao )','fator',3,'p_fatorExp','compilador2.py',334),
  ('ListArrayExp -> [ expressao ]','ListArrayExp',3,'p_ListArrayExpStop','compilador2.py',338),
  ('ListArrayExp -> ListArrayExp [ expressao ]','ListArrayExp',4,'p_ListArrayExp','compilador2.py',342),
]
